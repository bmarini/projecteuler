# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
# 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# 
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

class Fibonacci
  def initialize
    @cache = {}
  end

  def term(n)
    @cache[n] ||= begin
      case n
      when 1, 2 then n
      else term(n-1) + term(n-2)
      end
    end
  end
end

n   = 1
sum = 0
fib = Fibonacci.new

while fib.term(n) < 4_000_000
  sum += fib.term(n) if fib.term(n) % 2 == 0
  n   += 1
end

p sum
